State 2 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce
State 38 conflicts: 1 reduce/reduce
State 56 conflicts: 12 shift/reduce
State 92 conflicts: 12 shift/reduce
State 100 conflicts: 13 shift/reduce
State 101 conflicts: 12 shift/reduce
State 126 conflicts: 12 shift/reduce
State 127 conflicts: 12 shift/reduce
State 143 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | INT
    4    | STRING
    5    | voidexp
    6    | seqexp
    7    | IF exp THEN exp
    8    | IF exp THEN exp ELSE exp
    9    | WHILE exp DO exp
   10    | FOR ID ASSIGN exp TO exp DO exp
   11    | BREAK
   12    | LET decs IN END
   13    | LET decs IN exps END
   14    | ID LPAREN RPAREN
   15    | ID LPAREN args RPAREN
   16    | lvalue ASSIGN exp
   17    | ID LBRACK exp RBRACK OF exp
   18    | ID LBRACE RBRACE
   19    | ID LBRACE recorditems RBRACE
   20    | MINUS exp
   21    | exp PLUS exp
   22    | exp MINUS exp
   23    | exp TIMES exp
   24    | exp DIVIDE exp
   25    | exp EQ exp
   26    | exp NEQ exp
   27    | exp LT exp
   28    | exp LE exp
   29    | exp GT exp
   30    | exp GE exp
   31    | exp AND exp
   32    | exp OR exp
   33    | error SEMICOLON exp

   34 exps: exp
   35     | exp SEMICOLON exps

   36 seqexp: LPAREN RPAREN
   37       | LPAREN exps RPAREN
   38       | LPAREN error RPAREN

   39 voidexp: NIL

   40 recorditem: ID EQ exp

   41 recorditems: recorditem
   42            | recorditem COMMA recorditems

   43 args: exp
   44     | exp COMMA args

   45 tyfield: ID COLON ID

   46 tyfields: tyfield
   47         | tyfield COMMA tyfields
   48         | %empty

   49 ty: ID
   50   | ARRAY OF ID
   51   | LBRACE tyfields RBRACE

   52 tydec: TYPE ID EQ ty

   53 tydecs: tydec
   54       | tydec tydecs

   55 vardec: VAR ID ASSIGN exp
   56       | VAR ID COLON ID ASSIGN exp

   57 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   58       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   59 fundecs: fundec
   60        | fundec fundecs

   61 dec: tydecs
   62    | vardec
   63    | fundecs

   64 decs: dec
   65     | dec decs
   66     | %empty

   67 lvalue: ID
   68       | lvalue DOT ID
   69       | lvalue LBRACK exp RBRACK
   70       | ID LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256) 33 38
ID (258) 10 14 15 17 18 19 40 45 49 50 52 55 56 57 58 67 68 70
STRING (259) 4
INT (260) 3
COMMA (261) 42 44 47
COLON (262) 45 56 58
SEMICOLON (263) 33 35
LPAREN (264) 14 15 36 37 38 57 58
RPAREN (265) 14 15 36 37 38 57 58
LBRACK (266) 17 69 70
RBRACK (267) 17 69 70
LBRACE (268) 18 19 51
RBRACE (269) 18 19 51
DOT (270) 68
PLUS (271) 21
MINUS (272) 20 22
TIMES (273) 23
DIVIDE (274) 24
EQ (275) 25 40 52 57 58
NEQ (276) 26
LT (277) 27
LE (278) 28
GT (279) 29
GE (280) 30
AND (281) 31
OR (282) 32
ASSIGN (283) 10 16 55 56
ARRAY (284) 50
IF (285) 7 8
THEN (286) 7 8
ELSE (287) 8
WHILE (288) 9
FOR (289) 10
TO (290) 10
DO (291) 9 10
LET (292) 12 13
IN (293) 12 13
END (294) 12 13
OF (295) 17 50
BREAK (296) 11
NIL (297) 39
FUNCTION (298) 57 58
VAR (299) 55 56
TYPE (300) 52
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33, on right: 1 7 8 9 10 16 17 20
    21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 40 43 44 55 56 57
    58 69 70
exps (50)
    on left: 34 35, on right: 13 35 37
seqexp (51)
    on left: 36 37 38, on right: 6
voidexp (52)
    on left: 39, on right: 5
recorditem (53)
    on left: 40, on right: 41 42
recorditems (54)
    on left: 41 42, on right: 19 42
args (55)
    on left: 43 44, on right: 15 44
tyfield (56)
    on left: 45, on right: 46 47
tyfields (57)
    on left: 46 47 48, on right: 47 51 57 58
ty (58)
    on left: 49 50 51, on right: 52
tydec (59)
    on left: 52, on right: 53 54
tydecs (60)
    on left: 53 54, on right: 54 61
vardec (61)
    on left: 55 56, on right: 62
fundec (62)
    on left: 57 58, on right: 59 60
fundecs (63)
    on left: 59 60, on right: 60 63
dec (64)
    on left: 61 62 63, on right: 64 65
decs (65)
    on left: 64 65 66, on right: 12 13 65
lvalue (66)
    on left: 67 68 69 70, on right: 2 16 68 69


State 0

    0 $accept: . program $end

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program  go to state 13
    exp      go to state 14
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 1

   33 exp: error . SEMICOLON exp

    SEMICOLON  shift, and go to state 18


State 2

   14 exp: ID . LPAREN RPAREN
   15    | ID . LPAREN args RPAREN
   17    | ID . LBRACK exp RBRACK OF exp
   18    | ID . LBRACE RBRACE
   19    | ID . LBRACE recorditems RBRACE
   67 lvalue: ID .
   70       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 19
    LBRACK  shift, and go to state 20
    LBRACE  shift, and go to state 21

    LBRACK    [reduce using rule 67 (lvalue)]
    $default  reduce using rule 67 (lvalue)


State 3

    4 exp: STRING .

    $default  reduce using rule 4 (exp)


State 4

    3 exp: INT .

    $default  reduce using rule 3 (exp)


State 5

   36 seqexp: LPAREN . RPAREN
   37       | LPAREN . exps RPAREN
   38       | LPAREN . error RPAREN

    error   shift, and go to state 22
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 23
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 24
    exps     go to state 25
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 6

   20 exp: MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 26
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 7

    7 exp: IF . exp THEN exp
    8    | IF . exp THEN exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 27
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 8

    9 exp: WHILE . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 28
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 9

   10 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 29


State 10

   12 exp: LET . decs IN END
   13    | LET . decs IN exps END

    FUNCTION  shift, and go to state 30
    VAR       shift, and go to state 31
    TYPE      shift, and go to state 32

    $default  reduce using rule 66 (decs)

    tydec    go to state 33
    tydecs   go to state 34
    vardec   go to state 35
    fundec   go to state 36
    fundecs  go to state 37
    dec      go to state 38
    decs     go to state 39


State 11

   11 exp: BREAK .

    $default  reduce using rule 11 (exp)


State 12

   39 voidexp: NIL .

    $default  reduce using rule 39 (voidexp)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 40


State 14

    1 program: exp .
   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 1 (program)


State 15

    6 exp: seqexp .

    $default  reduce using rule 6 (exp)


State 16

    5 exp: voidexp .

    $default  reduce using rule 5 (exp)


State 17

    2 exp: lvalue .
   16    | lvalue . ASSIGN exp
   68 lvalue: lvalue . DOT ID
   69       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 53
    DOT     shift, and go to state 54
    ASSIGN  shift, and go to state 55

    $default  reduce using rule 2 (exp)


State 18

   33 exp: error SEMICOLON . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 56
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 19

   14 exp: ID LPAREN . RPAREN
   15    | ID LPAREN . args RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 57
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 58
    seqexp   go to state 15
    voidexp  go to state 16
    args     go to state 59
    lvalue   go to state 17


State 20

   17 exp: ID LBRACK . exp RBRACK OF exp
   70 lvalue: ID LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 60
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 21

   18 exp: ID LBRACE . RBRACE
   19    | ID LBRACE . recorditems RBRACE

    ID      shift, and go to state 61
    RBRACE  shift, and go to state 62

    recorditem   go to state 63
    recorditems  go to state 64


State 22

   33 exp: error . SEMICOLON exp
   38 seqexp: LPAREN error . RPAREN

    SEMICOLON  shift, and go to state 18
    RPAREN     shift, and go to state 65


State 23

   36 seqexp: LPAREN RPAREN .

    $default  reduce using rule 36 (seqexp)


State 24

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   34 exps: exp .
   35     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    $default  reduce using rule 34 (exps)


State 25

   37 seqexp: LPAREN exps . RPAREN

    RPAREN  shift, and go to state 67


State 26

   20 exp: MINUS exp .
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    $default  reduce using rule 20 (exp)


State 27

    7 exp: IF exp . THEN exp
    8    | IF exp . THEN exp ELSE exp
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    THEN    shift, and go to state 68


State 28

    9 exp: WHILE exp . DO exp
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 69


State 29

   10 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 70


State 30

   57 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   58       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 71


State 31

   55 vardec: VAR . ID ASSIGN exp
   56       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 72


State 32

   52 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 73


State 33

   53 tydecs: tydec .
   54       | tydec . tydecs

    TYPE  shift, and go to state 32

    TYPE      [reduce using rule 53 (tydecs)]
    $default  reduce using rule 53 (tydecs)

    tydec   go to state 33
    tydecs  go to state 74


State 34

   61 dec: tydecs .

    $default  reduce using rule 61 (dec)


State 35

   62 dec: vardec .

    $default  reduce using rule 62 (dec)


State 36

   59 fundecs: fundec .
   60        | fundec . fundecs

    FUNCTION  shift, and go to state 30

    FUNCTION  [reduce using rule 59 (fundecs)]
    $default  reduce using rule 59 (fundecs)

    fundec   go to state 36
    fundecs  go to state 75


State 37

   63 dec: fundecs .

    $default  reduce using rule 63 (dec)


State 38

   64 decs: dec .
   65     | dec . decs

    FUNCTION  shift, and go to state 30
    VAR       shift, and go to state 31
    TYPE      shift, and go to state 32

    IN        reduce using rule 64 (decs)
    IN        [reduce using rule 66 (decs)]
    $default  reduce using rule 64 (decs)

    tydec    go to state 33
    tydecs   go to state 34
    vardec   go to state 35
    fundec   go to state 36
    fundecs  go to state 37
    dec      go to state 38
    decs     go to state 76


State 39

   12 exp: LET decs . IN END
   13    | LET decs . IN exps END

    IN  shift, and go to state 77


State 40

    0 $accept: program $end .

    $default  accept


State 41

   21 exp: exp PLUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 78
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 42

   22 exp: exp MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 79
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 43

   23 exp: exp TIMES . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 80
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 44

   24 exp: exp DIVIDE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 81
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 45

   25 exp: exp EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 82
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 46

   26 exp: exp NEQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 83
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 47

   27 exp: exp LT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 84
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 48

   28 exp: exp LE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 85
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 49

   29 exp: exp GT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 86
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 50

   30 exp: exp GE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 87
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 51

   31 exp: exp AND . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 88
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 52

   32 exp: exp OR . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 89
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 53

   69 lvalue: lvalue LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 90
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 54

   68 lvalue: lvalue DOT . ID

    ID  shift, and go to state 91


State 55

   16 exp: lvalue ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 92
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 56

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | error SEMICOLON exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 33 (exp)]
    MINUS     [reduce using rule 33 (exp)]
    TIMES     [reduce using rule 33 (exp)]
    DIVIDE    [reduce using rule 33 (exp)]
    EQ        [reduce using rule 33 (exp)]
    NEQ       [reduce using rule 33 (exp)]
    LT        [reduce using rule 33 (exp)]
    LE        [reduce using rule 33 (exp)]
    GT        [reduce using rule 33 (exp)]
    GE        [reduce using rule 33 (exp)]
    AND       [reduce using rule 33 (exp)]
    OR        [reduce using rule 33 (exp)]
    $default  reduce using rule 33 (exp)


State 57

   14 exp: ID LPAREN RPAREN .

    $default  reduce using rule 14 (exp)


State 58

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   43 args: exp .
   44     | exp . COMMA args

    COMMA   shift, and go to state 93
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 43 (args)


State 59

   15 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 94


State 60

   17 exp: ID LBRACK exp . RBRACK OF exp
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   70 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 95
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 61

   40 recorditem: ID . EQ exp

    EQ  shift, and go to state 96


State 62

   18 exp: ID LBRACE RBRACE .

    $default  reduce using rule 18 (exp)


State 63

   41 recorditems: recorditem .
   42            | recorditem . COMMA recorditems

    COMMA  shift, and go to state 97

    $default  reduce using rule 41 (recorditems)


State 64

   19 exp: ID LBRACE recorditems . RBRACE

    RBRACE  shift, and go to state 98


State 65

   38 seqexp: LPAREN error RPAREN .

    $default  reduce using rule 38 (seqexp)


State 66

   35 exps: exp SEMICOLON . exps

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 24
    exps     go to state 99
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 67

   37 seqexp: LPAREN exps RPAREN .

    $default  reduce using rule 37 (seqexp)


State 68

    7 exp: IF exp THEN . exp
    8    | IF exp THEN . exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 100
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 69

    9 exp: WHILE exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 101
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 70

   10 exp: FOR ID ASSIGN . exp TO exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 102
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 71

   57 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   58       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 103


State 72

   55 vardec: VAR ID . ASSIGN exp
   56       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 104
    ASSIGN  shift, and go to state 105


State 73

   52 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 106


State 74

   54 tydecs: tydec tydecs .

    $default  reduce using rule 54 (tydecs)


State 75

   60 fundecs: fundec fundecs .

    $default  reduce using rule 60 (fundecs)


State 76

   65 decs: dec decs .

    $default  reduce using rule 65 (decs)


State 77

   12 exp: LET decs IN . END
   13    | LET decs IN . exps END

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    END     shift, and go to state 107
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 24
    exps     go to state 108
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 78

   21 exp: exp . PLUS exp
   21    | exp PLUS exp .
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 21 (exp)


State 79

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   22    | exp MINUS exp .
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 22 (exp)


State 80

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   23    | exp TIMES exp .
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    $default  reduce using rule 23 (exp)


State 81

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   24    | exp DIVIDE exp .
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    $default  reduce using rule 24 (exp)


State 82

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   25    | exp EQ exp .
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)


State 83

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   26    | exp NEQ exp .
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (exp)


State 84

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   27    | exp LT exp .
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 27 (exp)


State 85

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   28    | exp LE exp .
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 28 (exp)


State 86

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   29    | exp GT exp .
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 29 (exp)


State 87

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   30    | exp GE exp .
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 30 (exp)


State 88

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   31    | exp AND exp .
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 31 (exp)


State 89

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   32    | exp OR exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51

    $default  reduce using rule 32 (exp)


State 90

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   69 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 109
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 91

   68 lvalue: lvalue DOT ID .

    $default  reduce using rule 68 (lvalue)


State 92

   16 exp: lvalue ASSIGN exp .
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 16 (exp)]
    MINUS     [reduce using rule 16 (exp)]
    TIMES     [reduce using rule 16 (exp)]
    DIVIDE    [reduce using rule 16 (exp)]
    EQ        [reduce using rule 16 (exp)]
    NEQ       [reduce using rule 16 (exp)]
    LT        [reduce using rule 16 (exp)]
    LE        [reduce using rule 16 (exp)]
    GT        [reduce using rule 16 (exp)]
    GE        [reduce using rule 16 (exp)]
    AND       [reduce using rule 16 (exp)]
    OR        [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


State 93

   44 args: exp COMMA . args

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 58
    seqexp   go to state 15
    voidexp  go to state 16
    args     go to state 110
    lvalue   go to state 17


State 94

   15 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 15 (exp)


State 95

   17 exp: ID LBRACK exp RBRACK . OF exp
   70 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 111

    $default  reduce using rule 70 (lvalue)


State 96

   40 recorditem: ID EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 112
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 97

   42 recorditems: recorditem COMMA . recorditems

    ID  shift, and go to state 61

    recorditem   go to state 63
    recorditems  go to state 113


State 98

   19 exp: ID LBRACE recorditems RBRACE .

    $default  reduce using rule 19 (exp)


State 99

   35 exps: exp SEMICOLON exps .

    $default  reduce using rule 35 (exps)


State 100

    7 exp: IF exp THEN exp .
    8    | IF exp THEN exp . ELSE exp
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    ELSE    shift, and go to state 114

    PLUS      [reduce using rule 7 (exp)]
    MINUS     [reduce using rule 7 (exp)]
    TIMES     [reduce using rule 7 (exp)]
    DIVIDE    [reduce using rule 7 (exp)]
    EQ        [reduce using rule 7 (exp)]
    NEQ       [reduce using rule 7 (exp)]
    LT        [reduce using rule 7 (exp)]
    LE        [reduce using rule 7 (exp)]
    GT        [reduce using rule 7 (exp)]
    GE        [reduce using rule 7 (exp)]
    AND       [reduce using rule 7 (exp)]
    OR        [reduce using rule 7 (exp)]
    ELSE      [reduce using rule 7 (exp)]
    $default  reduce using rule 7 (exp)


State 101

    9 exp: WHILE exp DO exp .
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 9 (exp)]
    MINUS     [reduce using rule 9 (exp)]
    TIMES     [reduce using rule 9 (exp)]
    DIVIDE    [reduce using rule 9 (exp)]
    EQ        [reduce using rule 9 (exp)]
    NEQ       [reduce using rule 9 (exp)]
    LT        [reduce using rule 9 (exp)]
    LE        [reduce using rule 9 (exp)]
    GT        [reduce using rule 9 (exp)]
    GE        [reduce using rule 9 (exp)]
    AND       [reduce using rule 9 (exp)]
    OR        [reduce using rule 9 (exp)]
    $default  reduce using rule 9 (exp)


State 102

   10 exp: FOR ID ASSIGN exp . TO exp DO exp
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    TO      shift, and go to state 115


State 103

   57 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   58       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 116

    $default  reduce using rule 48 (tyfields)

    tyfield   go to state 117
    tyfields  go to state 118


State 104

   56 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 119


State 105

   55 vardec: VAR ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 120
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 106

   52 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 121
    LBRACE  shift, and go to state 122
    ARRAY   shift, and go to state 123

    ty  go to state 124


State 107

   12 exp: LET decs IN END .

    $default  reduce using rule 12 (exp)


State 108

   13 exp: LET decs IN exps . END

    END  shift, and go to state 125


State 109

   69 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 69 (lvalue)


State 110

   44 args: exp COMMA args .

    $default  reduce using rule 44 (args)


State 111

   17 exp: ID LBRACK exp RBRACK OF . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 126
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 112

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   40 recorditem: ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 40 (recorditem)


State 113

   42 recorditems: recorditem COMMA recorditems .

    $default  reduce using rule 42 (recorditems)


State 114

    8 exp: IF exp THEN exp ELSE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 127
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 115

   10 exp: FOR ID ASSIGN exp TO . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 128
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 116

   45 tyfield: ID . COLON ID

    COLON  shift, and go to state 129


State 117

   46 tyfields: tyfield .
   47         | tyfield . COMMA tyfields

    COMMA  shift, and go to state 130

    $default  reduce using rule 46 (tyfields)


State 118

   57 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   58       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 131


State 119

   56 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 132


State 120

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   55 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 55 (vardec)


State 121

   49 ty: ID .

    $default  reduce using rule 49 (ty)


State 122

   51 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 116

    $default  reduce using rule 48 (tyfields)

    tyfield   go to state 117
    tyfields  go to state 133


State 123

   50 ty: ARRAY . OF ID

    OF  shift, and go to state 134


State 124

   52 tydec: TYPE ID EQ ty .

    $default  reduce using rule 52 (tydec)


State 125

   13 exp: LET decs IN exps END .

    $default  reduce using rule 13 (exp)


State 126

   17 exp: ID LBRACK exp RBRACK OF exp .
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 17 (exp)]
    MINUS     [reduce using rule 17 (exp)]
    TIMES     [reduce using rule 17 (exp)]
    DIVIDE    [reduce using rule 17 (exp)]
    EQ        [reduce using rule 17 (exp)]
    NEQ       [reduce using rule 17 (exp)]
    LT        [reduce using rule 17 (exp)]
    LE        [reduce using rule 17 (exp)]
    GT        [reduce using rule 17 (exp)]
    GE        [reduce using rule 17 (exp)]
    AND       [reduce using rule 17 (exp)]
    OR        [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


State 127

    8 exp: IF exp THEN exp ELSE exp .
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 8 (exp)]
    MINUS     [reduce using rule 8 (exp)]
    TIMES     [reduce using rule 8 (exp)]
    DIVIDE    [reduce using rule 8 (exp)]
    EQ        [reduce using rule 8 (exp)]
    NEQ       [reduce using rule 8 (exp)]
    LT        [reduce using rule 8 (exp)]
    LE        [reduce using rule 8 (exp)]
    GT        [reduce using rule 8 (exp)]
    GE        [reduce using rule 8 (exp)]
    AND       [reduce using rule 8 (exp)]
    OR        [reduce using rule 8 (exp)]
    $default  reduce using rule 8 (exp)


State 128

   10 exp: FOR ID ASSIGN exp TO exp . DO exp
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 135


State 129

   45 tyfield: ID COLON . ID

    ID  shift, and go to state 136


State 130

   47 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 116

    $default  reduce using rule 48 (tyfields)

    tyfield   go to state 117
    tyfields  go to state 137


State 131

   57 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   58       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 138
    EQ     shift, and go to state 139


State 132

   56 vardec: VAR ID COLON ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 140
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 133

   51 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 141


State 134

   50 ty: ARRAY OF . ID

    ID  shift, and go to state 142


State 135

   10 exp: FOR ID ASSIGN exp TO exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 143
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 136

   45 tyfield: ID COLON ID .

    $default  reduce using rule 45 (tyfield)


State 137

   47 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 47 (tyfields)


State 138

   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 144


State 139

   57 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 145
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 140

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   56 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 56 (vardec)


State 141

   51 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 51 (ty)


State 142

   50 ty: ARRAY OF ID .

    $default  reduce using rule 50 (ty)


State 143

   10 exp: FOR ID ASSIGN exp TO exp DO exp .
   21    | exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 10 (exp)]
    MINUS     [reduce using rule 10 (exp)]
    TIMES     [reduce using rule 10 (exp)]
    DIVIDE    [reduce using rule 10 (exp)]
    EQ        [reduce using rule 10 (exp)]
    NEQ       [reduce using rule 10 (exp)]
    LT        [reduce using rule 10 (exp)]
    LE        [reduce using rule 10 (exp)]
    GT        [reduce using rule 10 (exp)]
    GE        [reduce using rule 10 (exp)]
    AND       [reduce using rule 10 (exp)]
    OR        [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)


State 144

   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 146


State 145

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   57 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 57 (fundec)


State 146

   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 147
    seqexp   go to state 15
    voidexp  go to state 16
    lvalue   go to state 17


State 147

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . EQ exp
   26    | exp . NEQ exp
   27    | exp . LT exp
   28    | exp . LE exp
   29    | exp . GT exp
   30    | exp . GE exp
   31    | exp . AND exp
   32    | exp . OR exp
   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 58 (fundec)
